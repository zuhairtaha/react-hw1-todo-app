{"version":3,"sources":["components/Layouts/Header.js","components/Layouts/Footer.js","components/Layouts/CenterContainer.js","components/queries.js","components/Layouts/Loading.js","components/Todos.js","components/crud/AddTodoBtn.js","components/crud/CategorySelect.js","components/crud/DeadLinePicker.js","components/crud/AddTodoDialog.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Style_default","Typography_default","variant","Button_default","href","target","Footer","render","Paper_default","square","React","Component","CenterContainer","Grid_default","container","item","xs","_this","children","GetTasks","gql","_templateObject","CategoriesTitles","_templateObject2","Loading","state","completed","buffer","progress","setState","diff","Math","random","diff2","this","timer","setInterval","clearInterval","_this$state","LinearProgress_default","value","valueBuffer","Todos","checked","todos","handleToggle","currentIndex","indexOf","newChecked","Object","toConsumableArray","push","splice","setTodos","List_default","Query","query","_ref","loading","error","data","Layouts_Loading","message","tasks","map","_ref2","description","important","deadline","_id","createdAt","done","ListItem_default","key","role","undefined","dense","button","onClick","Checkbox_default","tabIndex","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","Delete_default","Star_default","StarBorder_default","theme","backgroundColor","palette","background","paper","width","minHeight","fab","bottom","spacing","unit","right","openDialog","Add_default","CategorySelect","category","open","handleChange","event","defineProperty","name","handleClose","handleOpen","_this2","autoComplete","FormControl_default","fullWidth","formControl","InputLabel_default","htmlFor","Select_default","onClose","onOpen","onChange","inputProps","id","MenuItem_default","categories","title","display","marginTop","margin","flexWrap","textField","noValidate","TextField_default","label","type","defaultValue","InputLabelProps","shrink","AddTodoDialog","handleClickOpen","crud_AddTodoBtn","Dialog_default","maxWidth","aria-labelledby","DialogTitle_default","DialogContent_default","crud_CategorySelect","autoFocus","crud_DeadLinePicker","DialogActions_default","Send_default","style","client","ApolloClient","uri","App","react","Layouts_Header","Layouts_CenterContainer","react_apollo_browser_umd","components_Todos","AddTodoDialog_AddTodoDialog","Layouts_Footer","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f271fb74.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n}\r\n\r\nfunction Header(props) {\r\n  const {classes} = props\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <StyleIcon/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            ToDo App\r\n          </Typography>\r\n          <Button href=\"https://hackyourfuture.dk/\" target=\"_blank\" color=\"inherit\">hyf</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Header)","import React from 'react'\r\nimport Paper from \"@material-ui/core/Paper/Paper\"\r\nimport \"./style.Footer.scss\"\r\n\r\nclass Footer extends React.Component {\r\n  render = () =>\r\n    <Paper className=\"footer\" square>\r\n      <footer>\r\n        <p>First MERN stack application (todo list web application)</p>\r\n\r\n        <p>Front-end: React, Material UI, Apollo GraphQl <br/>\r\n          Back-end: Node.js, ExpressJs, MongoDB, Apollo GraphQl <br/>\r\n          ⚠️ Just reading from mongoDB is working currently. another CRUD operations are under construction\r\n        </p>\r\n      </footer>\r\n    </Paper>\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport Grid from \"@material-ui/core/Grid/Grid\"\r\nimport Paper from \"@material-ui/core/Paper/Paper\"\r\nimport \"./style.CenterContainer.scss\"\r\n\r\nclass CenterContainer extends React.Component {\r\n  render = () =>\r\n    <div className=\"center-container\">\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Paper className=\"center\">\r\n            {this.props.children}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CenterContainer","import gql from \"graphql-tag\"\r\n\r\nexport const GetTasks = gql`\r\n  {\r\n    tasks {\r\n      _id\r\n      categoryid\r\n      description\r\n      deadline\r\n      done\r\n      important\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`\r\n\r\nexport const CategoriesTitles = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}\r\n\r\nclass Loading extends React.Component {\r\n  state = {\r\n    completed: 0,\r\n    buffer: 10,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress, 500)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  progress = () => {\r\n    const {completed} = this.state\r\n    if (completed > 100) {\r\n      this.setState({completed: 0, buffer: 10})\r\n    } else {\r\n      const diff = Math.random() * 10\r\n      const diff2 = Math.random() * 10\r\n      this.setState({completed: completed + diff, buffer: completed + diff + diff2})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props\r\n    const {completed, buffer} = this.state\r\n    return (\r\n      <div className={classes.root}>\r\n        <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer}/>\r\n        <br/>\r\n        <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLoading.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Loading)","import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport IconDelete from '@material-ui/icons/Delete'\r\nimport IconStar from '@material-ui/icons/Star'\r\nimport IconStarBorder from '@material-ui/icons/StarBorder'\r\nimport Query from \"react-apollo/Query\"\r\nimport {GetTasks} from \"./queries\"\r\nimport Loading from \"./Layouts/Loading\"\r\n\r\nclass Todos extends React.Component {\r\n  state = {\r\n    checked: [0],\r\n    todos: []\r\n  }\r\n\r\n  handleToggle = value => () => {\r\n    const {checked} = this.state\r\n    const currentIndex = checked.indexOf(value)\r\n    const newChecked = [...checked]\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value)\r\n    } else {\r\n      newChecked.splice(currentIndex, 1)\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked,\r\n    })\r\n  }\r\n  setTodos = todos => this.setState({todos: todos})\r\n\r\n  render = () =>\r\n    <List>\r\n      <Query query={GetTasks}>\r\n        {({loading, error, data}) => {\r\n          if (loading) return <Loading/>\r\n          if (error) return <p>Error {error.message}</p>\r\n          return data.tasks.map(({description, deadline, important, _id, done, createdAt}) =>\r\n            <ListItem key={_id} role={undefined} dense button onClick={this.handleToggle(description)}>\r\n              <Checkbox\r\n                checked={this.state.checked.indexOf(description) !== -1}\r\n                tabIndex={-1}\r\n              />\r\n              <ListItemText\r\n                primary={description}\r\n                secondary={createdAt}/>\r\n              <ListItemSecondaryAction>\r\n\r\n                <IconButton aria-label=\"Comments\"><IconDelete/></IconButton>\r\n                <IconButton aria-label=\"Comments\">\r\n                  {important ? <IconStar/> : <IconStarBorder/>}\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          )\r\n        }}\r\n      </Query>\r\n    </List>\r\n\r\n}\r\n\r\nexport default Todos","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n    position: 'relative',\r\n    minHeight: 200,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n  }\r\n})\r\n\r\nfunction AddTodoBtn(props) {\r\n  const {classes} = props\r\n  return (\r\n    <Button variant=\"fab\" color=\"secondary\" onClick={props.openDialog} aria-label=\"Add\" className={classes.fab}>\r\n      <AddIcon/>\r\n    </Button>\r\n  )\r\n}\r\n\r\nAddTodoBtn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(AddTodoBtn)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport Query from \"react-apollo/Query\"\r\nimport {CategoriesTitles} from \"../queries\"\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n})\r\n\r\nclass CategorySelect extends React.Component {\r\n  state = {\r\n    category: '',\r\n    open: false,\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false})\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({open: true})\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props\r\n    return <Query query={CategoriesTitles}>\r\n      {({loading, error, data}) => {\r\n        if (loading) return 'loading...'\r\n        if (error) return <span>Error {error.message}</span>\r\n\r\n        return <form autoComplete=\"off\">\r\n          <FormControl fullWidth className={classes.formControl}>\r\n            <InputLabel htmlFor=\"demo-controlled-open-select\">Select Category</InputLabel>\r\n            <Select\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              onOpen={this.handleOpen}\r\n              value={this.state.category}\r\n              onChange={this.handleChange}\r\n              inputProps={{\r\n                name: 'category',\r\n                id: 'demo-controlled-open-select',\r\n              }}>\r\n              <MenuItem value=\"\">\r\n              </MenuItem>\r\n              {data.categories.map(({_id, title}) => (\r\n                <MenuItem key={_id} value={_id}>{title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </form>\r\n      }}\r\n    </Query>\r\n  }\r\n}\r\n\r\nCategorySelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(CategorySelect)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n\r\n  },\r\n})\r\n\r\nfunction DeadLinePicker(props) {\r\n  const {classes} = props\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        fullWidth\r\n        id=\"datetime-local\"\r\n        label=\"Next appointment\"\r\n        type=\"datetime-local\"\r\n        defaultValue=\"2017-05-24T10:30\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nDeadLinePicker.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(DeadLinePicker)","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport AddTodoBtn from \"./AddTodoBtn\"\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport CategorySelect from \"./CategorySelect\"\r\nimport DeadLinePicker from \"./DeadLinePicker\"\r\n\r\nexport default class AddTodoDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open: true})\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false})\r\n  }\r\n\r\n  render = () =>\r\n    <div>\r\n      <AddTodoBtn openDialog={this.handleClickOpen}/>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'md'}\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add new todo</DialogTitle>\r\n        <DialogContent>\r\n\r\n          {/*category*/}\r\n          <CategorySelect/>\r\n\r\n          {/*important*/}\r\n\r\n          {/*description*/}\r\n          <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Task description\" type=\"email\" fullWidth/>\r\n\r\n          {/*deadline*/}\r\n          <DeadLinePicker/>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={this.handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClose}>\r\n            add<SendIcon style={{marginLeft: 10}}/>\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n\r\n}","import React, {Component, Fragment} from 'react'\nimport ApolloClient from \"apollo-boost\"\nimport {ApolloProvider} from \"react-apollo\"\nimport {Header} from \"./components/Layouts\"\nimport CenterContainer from \"./components/Layouts/CenterContainer\"\nimport Todos from \"./components/Todos\"\nimport AddTodoDialog from \"./components/crud/AddTodoDialog\"\nimport Footer from \"./components/Layouts/Footer\"\n\nconst client = new ApolloClient({\n  uri: \"https://todos-hyf.herokuapp.com/graphql\"\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Header/>\n        <CenterContainer>\n          <ApolloProvider client={client}>\n            <Todos/>\n            <AddTodoDialog/>\n          </ApolloProvider>\n        </CenterContainer>\n        <Footer/>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}